enum event_location_type {
  offline
  online
  hybrid
}

enum rsvp_type {
  yes
  maybe
  no
}

enum user_role {
  administrator
  member
}

enum video_type {
  upload
  youtube
}

table accounts {
  userId text [not null]
  type text [not null]
  provider text [not null]
  providerAccountId text [not null]
  refresh_token text
  access_token text
  expires_at integer
  token_type text
  scope text
  id_token text
  session_state text

  indexes {
    (provider, providerAccountId) [pk]
  }
}

table authenticators {
  credentialID text [not null, unique]
  userId text [not null]
  providerAccountId text [not null]
  credentialPublicKey text [not null]
  counter integer [not null]
  credentialDeviceType text [not null]
  credentialBackedUp boolean [not null]
  transports text

  indexes {
    (userId, credentialID) [pk]
  }
}

table certificates {
  id text [pk, not null]
  event_id integer [not null]
  user_id text [not null]
  role text [not null, default: 'Peserta']
  created_at timestamp [not null, default: `now()`]

  indexes {
    (event_id, user_id, role) [name: 'certificates_event_id_user_id_role_unique', unique]
  }
}

table contact_form {
  id serial [pk, not null, increment]
  email text [not null]
  message text [not null]
  is_read boolean [not null, default: false]
  created_at timestamp [not null, default: `now()`]
}

table events {
  id serial [pk, not null, increment]
  name text [not null]
  image_url text
  registration_url text
  scheduled_start timestamp [not null]
  scheduled_end timestamp [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
  registration_fee integer
  description text
  attendee_limit integer
  location_name text
  location_url text
  location_type event_location_type
}

table events_attendees {
  event_id integer [not null]
  user_id text [not null]
  rsvp rsvp_type [not null, default: 'yes']
  attended boolean [not null, default: false]

  indexes {
    (event_id, user_id) [pk]
  }
}

table events_committees {
  event_id integer [not null]
  user_id text [not null]
  role text
  description text

  indexes {
    (event_id, user_id) [pk]
  }
}

table events_hosts_organizations {
  event_id integer [not null]
  organization_id integer [not null]

  indexes {
    (event_id, organization_id) [pk]
  }
}

table events_hosts_users {
  event_id integer [not null]
  user_id text [not null]

  indexes {
    (event_id, user_id) [pk]
  }
}

table events_speakers {
  event_id integer [not null]
  user_id text [not null]

  indexes {
    (event_id, user_id) [pk]
  }
}

table events_videos {
  event_id integer [not null]
  video_id integer [not null]

  indexes {
    (event_id, video_id) [pk]
  }
}

table feeds {
  id serial [pk, not null, increment]
  content text [not null]
  user_id text [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

table feeds_likes {
  feed_id integer [not null]
  user_id text [not null]

  indexes {
    (feed_id, user_id) [pk]
  }
}

table organizations {
  id serial [pk, not null, increment]
  name text [not null]
  image text
  slug text [not null, unique]
  organization_type text
  email text
  phone_number text
  website text
  short_bio text
  long_bio text
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

table sessions {
  sessionToken text [pk, not null]
  userId text [not null]
  expires timestamp [not null]
}

table users {
  id text [pk, not null]
  name text
  email text [not null]
  emailVerified timestamp
  image text
  user_role user_role [not null, default: 'member']
  onboarded boolean [not null, default: false]
  username text [not null, unique]
  phone_number text
  occupation text
  institution text
  bio text
}

table verificationTokens {
  identifier text [not null]
  token text [not null]
  expires timestamp [not null]

  indexes {
    (identifier, token) [pk]
  }
}

table videos {
  id serial [pk, not null, increment]
  title text [not null]
  description text
  video_url text [unique]
  thumbnails json
  video_type video_type [not null, default: 'upload']
  published_at timestamp [not null, default: `now()`]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

table videos_speakers {
  video_id integer [not null]
  user_id text [not null]

  indexes {
    (video_id, user_id) [pk]
  }
}

ref: certificates.event_id > events.id

ref: certificates.user_id > users.id

ref: events_attendees.event_id > events.id

ref: events_attendees.user_id > users.id

ref: events_committees.event_id > events.id

ref: events_committees.user_id > users.id

ref: events_hosts_organizations.event_id > events.id

ref: events_hosts_organizations.organization_id > organizations.id

ref: events_hosts_users.event_id > events.id

ref: events_hosts_users.user_id > users.id

ref: events_speakers.event_id > events.id

ref: events_speakers.user_id > users.id

ref: events_videos.event_id > events.id

ref: events_videos.video_id > videos.id

ref: feeds_likes.user_id > users.id

ref: feeds_likes.feed_id > feeds.id

ref: feeds.user_id > users.id

ref: videos_speakers.video_id > videos.id

ref: videos_speakers.user_id > users.id